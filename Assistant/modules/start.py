from typing import cast

from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Message, Update, User
from telegram.ext import ContextTypes
from telegram.helpers import mention_html

from Assistant.database.block_db import is_banned_user
from Assistant.database.users_db import add_served_user
from config import LOGGER_ID, OWNER_ID


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user = cast(User, update.effective_user)
    message = cast(Message, update.effective_message)
    owner = await context.bot.get_chat(OWNER_ID)
    if await is_banned_user(message.from_user.id):
        return

    #return

    button = InlineKeyboardMarkup(
        [
            [
                InlineKeyboardButton(
                    text="join",
                    url=f"https://t.me/New_Color_Games",
                ),
                InlineKeyboardButton(
                    text="join",
                    url=f"https://t.me/AnnaClubIndia",
                ),
                InlineKeyboardButton(
                    text="join",
                    url=f"https://t.me/+EMTYcJGIPkZiYjk1",
                ),
            ],
        ]
    )
    new_user = await add_served_user(message.from_user.id)
    if new_user:
        await context.bot.send_message(
            chat_id=LOGGER_ID,
            text=f"<b>…¥·¥á·¥° ·¥ús·¥á Ä :</b>\n·¥ús·¥á Ä: {mention_html(user.id, user.first_name)}\n<b>·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á:</b> {user.username}\n<b>…™·¥Ö:</b> <code>{user.id}</code>",
        )
    await message.reply_photo(
        "https://graph.org/file/ba8cf75fb71f22aa76b74.jpg",
        caption=f"..\n\n ú·¥á ü ü·¥è üëã{mention_html(user.id, user.first_name)}.\n\nüìù ·¥Äss…™s·¥õ·¥Ä…¥·¥õ ·¥è“ì {mention_html(owner.id, owner.first_name)}\n‚ñ∏ ·¥ç·¥úÍú±·¥õ ·¥ä·¥è…™…¥ ·¥è·¥ú Ä ·¥Ñ ú·¥Ä…¥…¥·¥á üÍú± ·¥õ ú·¥á…¥  è·¥è·¥ú ·¥Ä ô ü·¥á ·¥õ·¥è ·¥Ñ ú·¥Ä·¥õ ·¥°…™·¥õ ú ·¥è·¥°…¥·¥á Ä ‚úÖ",
        reply_markup=button,
    )
    return
